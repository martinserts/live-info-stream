/*
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * OpenAPI spec version: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.betfair.esa.swagger.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AllRequestTypesExample
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-10-07T12:34:48.137476+03:00[Europe/Riga]")
public class AllRequestTypesExample {
  /**
   * Gets or Sets opTypes
   */
  @JsonAdapter(OpTypesEnum.Adapter.class)
  public enum OpTypesEnum {
    HEARTBEAT("heartbeat"),
    AUTHENTICATION("authentication"),
    MARKETSUBSCRIPTION("marketSubscription"),
    ORDERSUBSCRIPTION("orderSubscription");

    private String value;

    OpTypesEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static OpTypesEnum fromValue(String text) {
      for (OpTypesEnum b : OpTypesEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<OpTypesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OpTypesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OpTypesEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OpTypesEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("opTypes")
  private OpTypesEnum opTypes = null;

  @SerializedName("heartbeat")
  private HeartbeatMessage heartbeat = null;

  @SerializedName("orderSubscriptionMessage")
  private OrderSubscriptionMessage orderSubscriptionMessage = null;

  @SerializedName("marketSubscription")
  private MarketSubscriptionMessage marketSubscription = null;

  @SerializedName("authentication")
  private AuthenticationMessage authentication = null;

  public AllRequestTypesExample opTypes(OpTypesEnum opTypes) {
    this.opTypes = opTypes;
    return this;
  }

   /**
   * Get opTypes
   * @return opTypes
  **/
  @Schema(description = "")
  public OpTypesEnum getOpTypes() {
    return opTypes;
  }

  public void setOpTypes(OpTypesEnum opTypes) {
    this.opTypes = opTypes;
  }

  public AllRequestTypesExample heartbeat(HeartbeatMessage heartbeat) {
    this.heartbeat = heartbeat;
    return this;
  }

   /**
   * Get heartbeat
   * @return heartbeat
  **/
  @Schema(description = "")
  public HeartbeatMessage getHeartbeat() {
    return heartbeat;
  }

  public void setHeartbeat(HeartbeatMessage heartbeat) {
    this.heartbeat = heartbeat;
  }

  public AllRequestTypesExample orderSubscriptionMessage(OrderSubscriptionMessage orderSubscriptionMessage) {
    this.orderSubscriptionMessage = orderSubscriptionMessage;
    return this;
  }

   /**
   * Get orderSubscriptionMessage
   * @return orderSubscriptionMessage
  **/
  @Schema(description = "")
  public OrderSubscriptionMessage getOrderSubscriptionMessage() {
    return orderSubscriptionMessage;
  }

  public void setOrderSubscriptionMessage(OrderSubscriptionMessage orderSubscriptionMessage) {
    this.orderSubscriptionMessage = orderSubscriptionMessage;
  }

  public AllRequestTypesExample marketSubscription(MarketSubscriptionMessage marketSubscription) {
    this.marketSubscription = marketSubscription;
    return this;
  }

   /**
   * Get marketSubscription
   * @return marketSubscription
  **/
  @Schema(description = "")
  public MarketSubscriptionMessage getMarketSubscription() {
    return marketSubscription;
  }

  public void setMarketSubscription(MarketSubscriptionMessage marketSubscription) {
    this.marketSubscription = marketSubscription;
  }

  public AllRequestTypesExample authentication(AuthenticationMessage authentication) {
    this.authentication = authentication;
    return this;
  }

   /**
   * Get authentication
   * @return authentication
  **/
  @Schema(description = "")
  public AuthenticationMessage getAuthentication() {
    return authentication;
  }

  public void setAuthentication(AuthenticationMessage authentication) {
    this.authentication = authentication;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllRequestTypesExample allRequestTypesExample = (AllRequestTypesExample) o;
    return Objects.equals(this.opTypes, allRequestTypesExample.opTypes) &&
        Objects.equals(this.heartbeat, allRequestTypesExample.heartbeat) &&
        Objects.equals(this.orderSubscriptionMessage, allRequestTypesExample.orderSubscriptionMessage) &&
        Objects.equals(this.marketSubscription, allRequestTypesExample.marketSubscription) &&
        Objects.equals(this.authentication, allRequestTypesExample.authentication);
  }

  @Override
  public int hashCode() {
    return Objects.hash(opTypes, heartbeat, orderSubscriptionMessage, marketSubscription, authentication);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllRequestTypesExample {\n");
    
    sb.append("    opTypes: ").append(toIndentedString(opTypes)).append("\n");
    sb.append("    heartbeat: ").append(toIndentedString(heartbeat)).append("\n");
    sb.append("    orderSubscriptionMessage: ").append(toIndentedString(orderSubscriptionMessage)).append("\n");
    sb.append("    marketSubscription: ").append(toIndentedString(marketSubscription)).append("\n");
    sb.append("    authentication: ").append(toIndentedString(authentication)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
