/*
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * OpenAPI spec version: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.betfair.esa.swagger.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
/**
 * OrderFilter
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-10-07T12:34:48.137476+03:00[Europe/Riga]")
public class OrderFilter {
  @SerializedName("includeOverallPosition")
  private Boolean includeOverallPosition = null;

  @SerializedName("accountIds")
  private List<Long> accountIds = null;

  @SerializedName("customerStrategyRefs")
  private List<String> customerStrategyRefs = null;

  @SerializedName("partitionMatchedByStrategyRef")
  private Boolean partitionMatchedByStrategyRef = null;

  public OrderFilter includeOverallPosition(Boolean includeOverallPosition) {
    this.includeOverallPosition = includeOverallPosition;
    return this;
  }

   /**
   * Returns overall / net position (See: OrderRunnerChange.mb / OrderRunnerChange.ml). Default&#x3D;true
   * @return includeOverallPosition
  **/
  @Schema(description = "Returns overall / net position (See: OrderRunnerChange.mb / OrderRunnerChange.ml). Default=true")
  public Boolean isIncludeOverallPosition() {
    return includeOverallPosition;
  }

  public void setIncludeOverallPosition(Boolean includeOverallPosition) {
    this.includeOverallPosition = includeOverallPosition;
  }

  public OrderFilter accountIds(List<Long> accountIds) {
    this.accountIds = accountIds;
    return this;
  }

  public OrderFilter addAccountIdsItem(Long accountIdsItem) {
    if (this.accountIds == null) {
      this.accountIds = new ArrayList<Long>();
    }
    this.accountIds.add(accountIdsItem);
    return this;
  }

   /**
   * Internal use only &amp; should not be set on your filter (your subscription is already locked to your account). If set subscription will fail.
   * @return accountIds
  **/
  @Schema(description = "Internal use only & should not be set on your filter (your subscription is already locked to your account). If set subscription will fail.")
  public List<Long> getAccountIds() {
    return accountIds;
  }

  public void setAccountIds(List<Long> accountIds) {
    this.accountIds = accountIds;
  }

  public OrderFilter customerStrategyRefs(List<String> customerStrategyRefs) {
    this.customerStrategyRefs = customerStrategyRefs;
    return this;
  }

  public OrderFilter addCustomerStrategyRefsItem(String customerStrategyRefsItem) {
    if (this.customerStrategyRefs == null) {
      this.customerStrategyRefs = new ArrayList<String>();
    }
    this.customerStrategyRefs.add(customerStrategyRefsItem);
    return this;
  }

   /**
   * Restricts to specified customerStrategyRefs; this will filter orders and StrategyMatchChanges accordingly (Note: overall postition is not filtered)
   * @return customerStrategyRefs
  **/
  @Schema(description = "Restricts to specified customerStrategyRefs; this will filter orders and StrategyMatchChanges accordingly (Note: overall postition is not filtered)")
  public List<String> getCustomerStrategyRefs() {
    return customerStrategyRefs;
  }

  public void setCustomerStrategyRefs(List<String> customerStrategyRefs) {
    this.customerStrategyRefs = customerStrategyRefs;
  }

  public OrderFilter partitionMatchedByStrategyRef(Boolean partitionMatchedByStrategyRef) {
    this.partitionMatchedByStrategyRef = partitionMatchedByStrategyRef;
    return this;
  }

   /**
   * Returns strategy positions (See: OrderRunnerChange.smc&#x3D;Map&lt;customerStrategyRef, StrategyMatchChange&gt;) - these are sent in delta format as per overall position. Default&#x3D;false
   * @return partitionMatchedByStrategyRef
  **/
  @Schema(description = "Returns strategy positions (See: OrderRunnerChange.smc=Map<customerStrategyRef, StrategyMatchChange>) - these are sent in delta format as per overall position. Default=false")
  public Boolean isPartitionMatchedByStrategyRef() {
    return partitionMatchedByStrategyRef;
  }

  public void setPartitionMatchedByStrategyRef(Boolean partitionMatchedByStrategyRef) {
    this.partitionMatchedByStrategyRef = partitionMatchedByStrategyRef;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderFilter orderFilter = (OrderFilter) o;
    return Objects.equals(this.includeOverallPosition, orderFilter.includeOverallPosition) &&
        Objects.equals(this.accountIds, orderFilter.accountIds) &&
        Objects.equals(this.customerStrategyRefs, orderFilter.customerStrategyRefs) &&
        Objects.equals(this.partitionMatchedByStrategyRef, orderFilter.partitionMatchedByStrategyRef);
  }

  @Override
  public int hashCode() {
    return Objects.hash(includeOverallPosition, accountIds, customerStrategyRefs, partitionMatchedByStrategyRef);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderFilter {\n");
    
    sb.append("    includeOverallPosition: ").append(toIndentedString(includeOverallPosition)).append("\n");
    sb.append("    accountIds: ").append(toIndentedString(accountIds)).append("\n");
    sb.append("    customerStrategyRefs: ").append(toIndentedString(customerStrategyRefs)).append("\n");
    sb.append("    partitionMatchedByStrategyRef: ").append(toIndentedString(partitionMatchedByStrategyRef)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
