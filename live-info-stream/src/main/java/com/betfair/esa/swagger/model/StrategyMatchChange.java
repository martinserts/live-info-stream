/*
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * OpenAPI spec version: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.betfair.esa.swagger.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
/**
 * StrategyMatchChange
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-10-07T12:34:48.137476+03:00[Europe/Riga]")
public class StrategyMatchChange {
  @SerializedName("mb")
  private List<List<Double>> mb = null;

  @SerializedName("ml")
  private List<List<Double>> ml = null;

  public StrategyMatchChange mb(List<List<Double>> mb) {
    this.mb = mb;
    return this;
  }

  public StrategyMatchChange addMbItem(List<Double> mbItem) {
    if (this.mb == null) {
      this.mb = new ArrayList<List<Double>>();
    }
    this.mb.add(mbItem);
    return this;
  }

   /**
   * Matched Backs - matched amounts by distinct matched price on the Back side for this strategy
   * @return mb
  **/
  @Schema(description = "Matched Backs - matched amounts by distinct matched price on the Back side for this strategy")
  public List<List<Double>> getMb() {
    return mb;
  }

  public void setMb(List<List<Double>> mb) {
    this.mb = mb;
  }

  public StrategyMatchChange ml(List<List<Double>> ml) {
    this.ml = ml;
    return this;
  }

  public StrategyMatchChange addMlItem(List<Double> mlItem) {
    if (this.ml == null) {
      this.ml = new ArrayList<List<Double>>();
    }
    this.ml.add(mlItem);
    return this;
  }

   /**
   * Matched Lays - matched amounts by distinct matched price on the Lay side for this strategy
   * @return ml
  **/
  @Schema(description = "Matched Lays - matched amounts by distinct matched price on the Lay side for this strategy")
  public List<List<Double>> getMl() {
    return ml;
  }

  public void setMl(List<List<Double>> ml) {
    this.ml = ml;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StrategyMatchChange strategyMatchChange = (StrategyMatchChange) o;
    return Objects.equals(this.mb, strategyMatchChange.mb) &&
        Objects.equals(this.ml, strategyMatchChange.ml);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mb, ml);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StrategyMatchChange {\n");
    
    sb.append("    mb: ").append(toIndentedString(mb)).append("\n");
    sb.append("    ml: ").append(toIndentedString(ml)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
